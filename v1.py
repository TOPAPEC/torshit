import asyncio
from advisor import TravelAdvisor

async def process_and_evaluate_query(advisor, query, query_description):
    print(f"\n{'='*20} –¢–ï–°–¢–û–í–´–ô –ó–ê–ü–†–û–°: {query_description} {'='*20}")
    print(f"–ó–∞–ø—Ä–æ—Å: {query}")
    
    try:
        cities_chunks, top_cities, preferences, available_tokens = await advisor.process_request(query)
        cities_content = await advisor.wiki_service.get_all_cities_content()
        
        if not cities_chunks:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å")
            return
        
        print("\nüìã –ê–ù–ê–õ–ò–ó –ó–ê–ü–†–û–°–ê:")
        print(preferences)
        
        print("\nüéØ –†–ï–ö–û–ú–ï–ù–î–û–í–ê–ù–ù–´–ï –ì–û–†–û–î–ê:")
        for city, score in top_cities:
            print(f"\nüèõÔ∏è {city} (–†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {score:.3f})")
            if city in cities_chunks:
                all_text = " ".join(cities_chunks[city])
                        
                # Climate information
                if '—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞' in all_text.lower() or any(month in all_text.lower() for month in ['—è–Ω–≤–∞—Ä', '—Ñ–µ–≤—Ä–∞–ª', '–º–∞—Ä—Ç', '–∞–ø—Ä–µ–ª', '–º–∞–π', '–∏—é–Ω', '–∏—é–ª', '–∞–≤–≥—É—Å—Ç', '—Å–µ–Ω—Ç—è–±—Ä', '–æ–∫—Ç—è–±—Ä', '–Ω–æ—è–±—Ä', '–¥–µ–∫–∞–±—Ä']):
                    climate_info = "üå°Ô∏è "
                    for sentence in all_text.split('.'):
                        if any(month in sentence.lower() for month in ['—è–Ω–≤–∞—Ä', '—Ñ–µ–≤—Ä–∞–ª', '–º–∞—Ä—Ç', '–∞–ø—Ä–µ–ª', '–º–∞–π', '–∏—é–Ω', '–∏—é–ª', '–∞–≤–≥—É—Å—Ç', '—Å–µ–Ω—Ç—è–±—Ä', '–æ–∫—Ç—è–±—Ä', '–Ω–æ—è–±—Ä', '–¥–µ–∫–∞–±—Ä']) and ('—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞' in sentence.lower() or '–≥—Ä–∞–¥—É—Å' in sentence.lower()):
                            climate_info += sentence.strip() + ". "
                            break
                    if not any(month in climate_info.lower() for month in ['—è–Ω–≤–∞—Ä', '—Ñ–µ–≤—Ä–∞–ª', '–º–∞—Ä—Ç', '–∞–ø—Ä–µ–ª', '–º–∞–π', '–∏—é–Ω', '–∏—é–ª', '–∞–≤–≥—É—Å—Ç', '—Å–µ–Ω—Ç—è–±—Ä', '–æ–∫—Ç—è–±—Ä', '–Ω–æ—è–±—Ä', '–¥–µ–∫–∞–±—Ä']):
                        for sentence in all_text.split('.'):
                            if '—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞' in sentence.lower():
                                climate_info += sentence.strip() + ". "
                                break
                    print(climate_info.strip().replace(",", "."))
                        
                # OpenStreetMap POI information
                if city in cities_content and cities_content[city].pois:
                    pois = cities_content[city].pois
                    
                    # Beaches
                    if pois.beaches:
                        print("üèñÔ∏è –ü–ª—è–∂–∏:")
                        for beach in pois.beaches:
                            print(f"  ‚Ä¢ {beach.name}")
                    elif '–ø–ª—è–∂' in all_text.lower() or '–º–æ—Ä–µ' in all_text.lower():
                        beach_info = "üèñÔ∏è "
                        if '–ø–µ—Å—á–∞–Ω—ã–π' in all_text.lower():
                            beach_info += "–ï—Å—Ç—å –ø–µ—Å—á–∞–Ω—ã–µ –ø–ª—è–∂–∏. "
                        if '–∫—É–ø–∞–ª—å–Ω—ã–π —Å–µ–∑–æ–Ω' in all_text.lower():
                            for sentence in all_text.split('.'):
                                if '–∫—É–ø–∞–ª—å–Ω—ã–π —Å–µ–∑–æ–Ω' in sentence.lower():
                                    beach_info += sentence.strip() + ". "
                                    break
                        print(beach_info.strip())
                    
                    # Tourist attractions
                    if pois.tourist_attractions:
                        print("üèõÔ∏è –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:")
                        for attraction in pois.tourist_attractions[:5]:
                            print(f"  ‚Ä¢ {attraction.name}")
                    
                    # Entertainment
                    if pois.entertainment:
                        print("üé° –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è:")
                        for venue in pois.entertainment[:5]:
                            print(f"  ‚Ä¢ {venue.name}")
                    
                    # Sports facilities
                    if pois.sports_facilities:
                        print("üèÉ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã:")
                        for facility in pois.sports_facilities[:5]:
                            print(f"  ‚Ä¢ {facility.name}")
                
                # Tourist infrastructure from Wikipedia
                if '—Ç—É—Ä–∏—Å—Ç–∏' in all_text.lower():
                    for sentence in all_text.split('.'):
                        if '—Ç—É—Ä–∏—Å—Ç–∏' in sentence.lower():
                            print("üè® " + sentence.strip() + ".")
                            break
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")
        raise

async def main():
    advisor = TravelAdvisor()
    
    test_queries = [
        """–ú—ã —Å –º—É–∂–µ–º –æ—á–µ–Ω—å —É—Å—Ç–∞–ª–∏ –Ω–∞ —Ä–∞–±–æ—Ç–µ –∏ —Ö–æ—Ç–∏–º –≤ –∞–≤–≥—É—Å—Ç–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–ª–µ–∂–∞—Ç—å –Ω–∞ –ø–ª—è–∂–µ, 
           –ø–æ—Å–ª—É—à–∞—Ç—å —à—É–º –≤–æ–ª–Ω. –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –±—ã–ª–∏ –Ω–∞ –º–æ—Ä–µ 3 –≥–æ–¥–∞ –Ω–∞–∑–∞–¥... –ù–∞–¥–æ–µ–ª–∞ —ç—Ç–∞ –º–æ—Å–∫–æ–≤—Å–∫–∞—è 
           —Å—É–µ—Ç–∞. –•–æ—á–µ—Ç—Å—è —Ç–µ–ø–ª–æ–≥–æ –º–æ—Ä—è –∏ –º—è–≥–∫–æ–≥–æ –ø–µ—Å–æ—á–∫–∞ –ø–æ–¥ –Ω–æ–≥–∞–º–∏. –ù–∞ –¥–≤–æ–∏—Ö –º–æ–∂–µ–º –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å 
           –æ–∫–æ–ª–æ 100 —Ç—ã—Å—è—á, –Ω–µ –±–æ–ª—å—à–µ.""",
        
        """–í —á–µ—Å—Ç—å –Ω–∞—à–µ–π –≥–æ–¥–æ–≤—â–∏–Ω—ã —Å–≤–∞–¥—å–±—ã —Ä–µ—à–∏–ª–∏ —É—Å—Ç—Ä–æ–∏—Ç—å —Å–µ–±–µ —Ä–æ—Å–∫–æ—à–Ω—ã–π –æ—Ç–ø—É—Å–∫. 
           –•–æ—á–µ—Ç—Å—è —á–µ–≥–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ - —Å–ø–∞-–ø—Ä–æ—Ü–µ–¥—É—Ä—ã, –º–∞—Å—Å–∞–∂–∏, —á—Ç–æ–±—ã —Å–µ—Ä–≤–∏—Å –±—ã–ª –Ω–∞ –≤—ã—Å—à–µ–º 
           —É—Ä–æ–≤–Ω–µ. –ë—é–¥–∂–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 300 —Ç—ã—Å—è—á, —Ö–æ—Ç–∏–º —á—Ç–æ–±—ã –≤—Å–µ –±—ã–ª–æ –∏–¥–µ–∞–ª—å–Ω–æ.""",
        
        """–î–µ—Ç–∏ (5 –∏ 7 –ª–µ—Ç) –≤—Å–µ —É—à–∏ –ø—Ä–æ–∂—É–∂–∂–∞–ª–∏ –ø—Ä–æ –º–æ—Ä–µ –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è. –ú—É–∂ —Å–µ–π—á–∞—Å 
           –º–µ–∂–¥—É —Ä–∞–±–æ—Ç–∞–º–∏, —Ç–∞–∫ —á—Ç–æ –±—é–¥–∂–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω - –º–∞–∫—Å–∏–º—É–º 80 —Ç—ã—Å—è—á. –ë—ã–ª–æ –±—ã –∑–¥–æ—Ä–æ–≤–æ, 
           –µ—Å–ª–∏ –±—ã —Ç–∞–º –±—ã–ª –∞–∫–≤–∞–ø–∞—Ä–∫ –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–ª—è –¥–µ—Ç–µ–π, –∞ —Ç–æ –æ–Ω–∏ –±—ã—Å—Ç—Ä–æ 
           —É—Å—Ç–∞—é—Ç –ø—Ä–æ—Å—Ç–æ –Ω–∞ –ø–ª—è–∂–µ –ª–µ–∂–∞—Ç—å.""",
        
        """–ù–µ–¥–∞–≤–Ω–æ –Ω–∞—á–∞–ª–∞ —É–≤–ª–µ–∫–∞—Ç—å—Å—è –∏—Å—Ç–æ—Ä–∏–µ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, –Ω–∞—Å–º–æ—Ç—Ä–µ–ª–∞—Å—å —Ä–æ–ª–∏–∫–æ–≤ 
           –Ω–∞ —é—Ç—É–±–µ –ø—Ä–æ —Ä–∞–∑–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Å—Ç–∞. –•–æ—á—É –ø–æ–µ—Ö–∞—Ç—å –∫—É–¥–∞-–Ω–∏–±—É–¥—å, –≥–¥–µ –º–æ–∂–Ω–æ 
           –ø–æ—Ö–æ–¥–∏—Ç—å –ø–æ –º—É–∑–µ—è–º –∏ —Å—Ç–∞—Ä–∏–Ω–Ω—ã–º —É–ª–æ—á–∫–∞–º. –¢–æ–ª—å–∫–æ –≤–æ—Ç –∂–∞—Ä—É –ø–ª–æ—Ö–æ –ø–µ—Ä–µ–Ω–æ—à—É, 
           –±–æ–ª—å—à–µ 25 –≥—Ä–∞–¥—É—Å–æ–≤ —É–∂–µ —Ç—è–∂–µ–ª–æ. –ù–∞ –æ—Ç–ø—É—Å–∫ –æ—Ç–ª–æ–∂–∏–ª–∞ 150 —Ç—ã—Å—è—á.""",
        
        """–î—Ä—É–∑—å—è –ø–æ–∑–≤–∞–ª–∏ –ø–æ–∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ –ª—ã–∂–∞—Ö –≤ —è–Ω–≤–∞—Ä–µ. –Ø –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –ª–µ—Ç 5 –Ω–∞–∑–∞–¥ 
           –Ω–∞ –≥–æ—Ä–Ω—ã—Ö –ª—ã–∂–∞—Ö —Å—Ç–æ—è–ª, –Ω–æ –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞. –ú–æ–≥—É –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å 
           –¥–æ 200 —Ç—ã—Å—è—á, –≤–∫–ª—é—á–∞—è —ç–∫–∏–ø–∏—Ä–æ–≤–∫—É –∏ –≤—Å–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è."""
    ]
    
    for i, query in enumerate(test_queries, 1):
        print(f"\nüìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ {i} –∏–∑ {len(test_queries)}")
        try:
            await process_and_evaluate_query(advisor, query, f"–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å {i}")
            print(f"‚úÖ –ó–∞–ø—Ä–æ—Å {i} –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ {i}: {str(e)}")
            continue

if __name__ == "__main__":
    try:
        print("\nüöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...")
        asyncio.run(main())
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    except KeyboardInterrupt:
        print("\n‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        raise
    except Exception as e:
        print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        raise
